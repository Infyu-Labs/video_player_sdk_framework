// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name UnityVideoPlugin
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import AVKit
import Combine
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _AVKit_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct SwiftUISlider : SwiftUI.UIViewRepresentable {
  @objc final public class Coordinator : ObjectiveC.NSObject {
    public init(value: SwiftUICore.Binding<Swift.Double>, maxValue: Swift.Double, parent: UnityVideoPlugin.SwiftUISlider? = nil)
    @objc deinit
  }
  @_Concurrency.MainActor @preconcurrency public func makeUIView(context: UnityVideoPlugin.SwiftUISlider.Context) -> UIKit.UISlider
  @_Concurrency.MainActor @preconcurrency public func updateUIView(_ uiView: UIKit.UISlider, context: UnityVideoPlugin.SwiftUISlider.Context)
  @_Concurrency.MainActor @preconcurrency public func makeCoordinator() -> UnityVideoPlugin.SwiftUISlider.Coordinator
  public typealias Body = Swift.Never
  public typealias UIViewType = UIKit.UISlider
}
@_Concurrency.MainActor @preconcurrency public struct DissabledViewModifier : SwiftUICore.ViewModifier {
  @_Concurrency.MainActor @preconcurrency public func body(content: UnityVideoPlugin.DissabledViewModifier.Content) -> some SwiftUICore.View
  
  public typealias Body = @_opaqueReturnTypeOf("$s16UnityVideoPlugin21DissabledViewModifierV4body7contentQr7SwiftUI01_eF8_ContentVyACG_tF", 0) __
}
extension UIKit.UIImage {
  public func resized(to target: CoreFoundation.CGSize) -> UIKit.UIImage
}
@_Concurrency.MainActor @preconcurrency public struct VideoPlayerView : SwiftUICore.View {
  @SwiftUICore.ObservedObject @_projectedValueProperty($playerController) @_Concurrency.MainActor @preconcurrency public var playerController: UnityVideoPlugin.PlayerController {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $playerController: SwiftUICore.ObservedObject<UnityVideoPlugin.PlayerController>.Wrapper {
    get
  }
  @_Concurrency.MainActor @preconcurrency public init(playerController: UnityVideoPlugin.PlayerController)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s16UnityVideoPlugin0B10PlayerViewV4bodyQrvp", 0) __
}

@objc @_inheritsConvenienceInitializers public class PlayerController : ObjectiveC.NSObject, Foundation.ObservableObject {
  @Combine.Published @_projectedValueProperty($player) public var player: AVFoundation.AVPlayer? {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $player: Combine.Published<AVFoundation.AVPlayer?>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($isPlaying) public var isPlaying: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $isPlaying: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($currentTime) public var currentTime: Swift.Double {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $currentTime: Combine.Published<Swift.Double>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($duration) public var duration: Swift.Double {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $duration: Combine.Published<Swift.Double>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($buttonSize) public var buttonSize: CoreFoundation.CGFloat {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $buttonSize: Combine.Published<CoreFoundation.CGFloat>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showForwardButton) public var showForwardButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showForwardButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showBackwordButton) public var showBackwordButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showBackwordButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showBack10Button) public var showBack10Button: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showBack10Button: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showFor10Button) public var showFor10Button: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showFor10Button: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showPlayPauseButton) public var showPlayPauseButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showPlayPauseButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showBackButton) public var showBackButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showBackButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showLogo) public var showLogo: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showLogo: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showSeekbar) public var showSeekbar: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showSeekbar: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showTimeDration) public var showTimeDration: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showTimeDration: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showLoading) public var showLoading: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showLoading: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($disableBackButton) public var disableBackButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $disableBackButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($disbleForwardButton) public var disbleForwardButton: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $disbleForwardButton: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @Combine.Published @_projectedValueProperty($showControls) public var showControls: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $showControls: Combine.Published<Swift.Bool>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  @objc override dynamic public init()
  public func setURLS(_ urls: [Swift.String])
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  public func play()
  public func pause()
  public func stop()
  public func nextVideo()
  public func prevVideo()
  public func seekForward(seconds: Swift.Double)
  public func seekBackward(seconds: Swift.Double)
  public func seekTo(value: Swift.Double)
  public func getURLs() -> [Swift.String]
  public func backToHome()
  public func formatTime(seconds: Swift.Double) -> Swift.String
  public func cleanup()
  public func toggleControls()
  public func autoHideControls()
  @objc deinit
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
}
@_cdecl("loadVideo")
public func loadVideo(urlString: Swift.UnsafePointer<Swift.CChar>)
@_cdecl("play")
public func play()
@_cdecl("pause")
public func pause()
@_cdecl("stop")
public func stop()
@_cdecl("seekForward")
public func seekForward(seconds: Swift.Double)
@_cdecl("seekBackward")
public func seekBackward(seconds: Swift.Double)
@_cdecl("seekTo")
public func seekTo(value: Swift.Double)
@_cdecl("cleanup")
public func cleanup()
@_cdecl("setURLS")
public func setURLS(_ cArray: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ count: Swift.Int32)
@_cdecl("setShowForwardButton")
public func setShowForwardButton(_ visible: Swift.Bool)
@_cdecl("setShowBackwordButton")
public func setShowBackwordButton(_ visible: Swift.Bool)
@_cdecl("setShowBack10Button")
public func setShowBack10Button(_ visible: Swift.Bool)
@_cdecl("setShowFor10Button")
public func setShowFor10Button(_ visible: Swift.Bool)
@_cdecl("setShowPlayPauseButton")
public func setShowPlayPauseButton(_ visible: Swift.Bool)
@_cdecl("setShowBackButton")
public func setShowBackButton(_ visible: Swift.Bool)
@_cdecl("setShowLogo")
public func setShowLogo(_ visible: Swift.Bool)
@_cdecl("setShowSeekbar")
public func setShowSeekbar(_ visible: Swift.Bool)
@_cdecl("setShowTimeDuration")
public func setShowTimeDuration(_ visible: Swift.Bool)
@_hasMissingDesignatedInitializers public class VideoPlayerService {
  public static let shared: UnityVideoPlugin.VideoPlayerService
  public func loadVideo(urlString: Swift.String)
  public func play()
  public func pause()
  public func stop()
  public func seekForward(seconds: Swift.Double)
  public func seekBackward(seconds: Swift.Double)
  public func cleanup()
  public func seekTo(value: Swift.Double)
  public func setURLS(urls: [Swift.String])
  public func setShowForwardButton(_ visible: Swift.Bool)
  public func setShowBackwordButton(_ visible: Swift.Bool)
  public func setShowBack10Button(_ visible: Swift.Bool)
  public func setShowFor10Button(_ visible: Swift.Bool)
  public func setShowPlayPauseButton(_ visible: Swift.Bool)
  public func setShowBackButton(_ visible: Swift.Bool)
  public func setShowLogo(_ visible: Swift.Bool)
  public func setShowSeekbar(_ visible: Swift.Bool)
  public func setShowTimeDuration(_ visible: Swift.Bool)
  @objc deinit
}
extension UIKit.UIApplication {
  @_Concurrency.MainActor @preconcurrency public func topMostViewController() -> UIKit.UIViewController?
}
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func isHidden(_ bool: Swift.Bool) -> some SwiftUICore.View
  
  @_Concurrency.MainActor @preconcurrency public func isDisabled(_ bool: Swift.Bool) -> some SwiftUICore.View
  
}
@_Concurrency.MainActor @preconcurrency public struct HiddenViewModifier : SwiftUICore.ViewModifier {
  @_Concurrency.MainActor @preconcurrency public func body(content: UnityVideoPlugin.HiddenViewModifier.Content) -> some SwiftUICore.View
  
  public typealias Body = @_opaqueReturnTypeOf("$s16UnityVideoPlugin18HiddenViewModifierV4body7contentQr7SwiftUI01_eF8_ContentVyACG_tF", 0) __
}
extension UnityVideoPlugin.SwiftUISlider : Swift.Sendable {}
extension UnityVideoPlugin.DissabledViewModifier : Swift.Sendable {}
extension UnityVideoPlugin.VideoPlayerView : Swift.Sendable {}
extension UnityVideoPlugin.HiddenViewModifier : Swift.Sendable {}
